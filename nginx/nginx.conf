worker_processes 4;

events {
  worker_connections 1024;
}

http {
  log_format json escape=json '{ "time": "$time_iso8601", '
  	'"remote_addr": "$remote_addr", '
  	'"remote_user": "$remote_user", '
  	'"ssl_protocol_cipher": "$ssl_protocol/$ssl_cipher", '
  	'"body_bytes_sent": "$body_bytes_sent", '
  	'"request_time": "$request_time", '
  	'"status": "$status", '
  	'"request": "$request", '
  	'"request_method": "$request_method", '
  	'"http_referrer": "$http_referer", '
  	'"http_x_forwarded_for": "$http_x_forwarded_for", '
  	'"http_cf_ray": "$http_cf_ray", '
  	'"host": "$host", '
  	'"server_name": "$server_name", '
  	'"upstream_address": "$upstream_addr", '
  	'"upstream_status": "$upstream_status", '
  	'"upstream_response_time": "$upstream_response_time", '
  	'"upstream_response_length": "$upstream_response_length", '
  	'"upstream_cache_status": "$upstream_cache_status", '
  	'"http_user_agent": "$http_user_agent" }';

  server {
    listen 80;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://nodes;

      # enable WebSockets
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  upstream nodes {
    # enable sticky session with either "hash" (uses the complete IP address)
#     hash $remote_addr consistent;
    # or "ip_hash" (uses the first three octets of the client IPv4 address, or the entire IPv6 address)
#     ip_hash;
    # or "sticky" (needs commercial subscription)
    # sticky cookie srv_id expires=1h domain=.example.com path=/;

    server server1:5000;
    server server2:5000;
    server server3:5000;
  }
}
